{"version":3,"sources":["services.js","Login.jsx","Logout.jsx","AddTodo.jsx","Filter.jsx","TodoDisplay.jsx","Todo.jsx","ThemeContext.jsx","App.jsx","serviceWorker.js","index.js"],"names":["fetchAllTodos","username","fetch","method","catch","error","json","then","err","Promise","reject","message","response","ok","fetchTask","taskId","fetchUpdateTask","task","headers","body","JSON","stringify","Login","onLogin","setError","useState","setUsername","useEffect","className","onChange","e","target","value","placeholder","onClick","fetchLogin","user","data","Logout","onLogout","AddTodo","onSend","userState","setUserState","todo","setTodo","fetchTodo","done","todos","isLoggedIn","Filter","filterState","onFilter","sortState","onSort","sorter","setSort","filter","setFilter","TodoDisplay","setTodos","newtodo","setFilterState","setSortState","changeStatus","id","dataset","tasks","Object","values","updateText","text","updated","deleteText","todosList","sort","task1","task2","localeCompare","map","key","data-id","defaultValue","Todo","TodoList","length","ThemeContext","React","createContext","App","theme","setTheme","getTheme","fetchTheme","Provider","updateTheme","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.edcf9d47.chunk.js","sourcesContent":["export const fetchLoginStatus = () =>{\n    return fetch('/session',{\n        method:'GET',\n      })\n      .catch( (error) => error.json().then(err => Promise.reject(err.message)))\n      .then( (response) =>{\n        if(!response.ok){\n          return response.json().then(err => Promise.reject(err));\n        }\n        return response.json();\n    });\n}\n\nexport const fetchLogin = (username) => {\n    return fetch('/session',{\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username: username }),\n    })\n    .catch( (error) => error.json().then(err => Promise.reject(err.message)))\n    .then( (response) => {\n        if(!response.ok){\n            return response.json().then( err => Promise.reject(err));\n        }\n        return response.json();\n    });\n}\n\nexport const fetchLogout = () => {\n    return fetch('/session', {\n        method: 'DELETE',\n    })\n    .catch( (error) => error.json().then(err => Promise.reject(err.message)))\n    .then( (response) => {\n        if(!response.ok){\n            return Promise.reject({ error: 'Error logging out'})\n        }\n        return;\n    });\n}\n\nexport const fetchTodo = (task, username) => {\n    return fetch(`/tasks/${username}`,{\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({task: task})\n    })\n    .catch( (error) => error.json().then(err => Promise.reject(err.message)))\n    .then( (response) => {\n        if(!response.ok){\n            return response.json().then(err => Promise.reject(err));\n        }\n        return response.json();\n    });\n}\n\nexport const fetchAllTodos = (username) => {\n    return fetch(`/tasks/${username}`, {\n        method: 'GET'\n    })\n    .catch( (error) => error.json().then(err => Promise.reject(err.message)))\n    .then( (response) => {\n        if(!response.ok){\n            return response.json().then(err => Promise.reject(err));\n        }\n        return response.json();\n    });\n}\n\nexport const fetchTask = (taskId, username) => {\n    return fetch(`/tasks/${username}/${taskId}`,{\n        method: 'GET'\n    })\n    .catch( (error) => error.json().then(err => Promise.reject(err.message)))\n    .then( (response) =>{\n        if(!response.ok){\n            return response.json().then(err => Promise.reject(err));\n        }\n        return response.json();\n    })\n}\n\nexport const fetchUpdateTask = (username, task) => {\n    return fetch(`/tasks/${username}/${task.taskId}`, {\n        method:'PUT',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({task: task})\n    })\n    .catch( (error) => error.json().then(err => Promise.reject(err.message)))\n    .then( (response) =>{\n        if(!response.ok){\n            return response.json().then(err => Promise.reject(err));\n        }\n        return response.json();\n    })\n}\n\nexport const deleteTask = (username, taskId) => {\n    return fetch(`/tasks/${username}/${taskId}`, {\n        method: 'DELETE'\n    })\n    .catch( (error) => error.json().then(err => Promise.reject(err.message)))\n    .then( (response) =>{\n        if(!response.ok){\n            return response.json().then(err => Promise.reject(err));\n        }\n        return response.json();\n    })\n}\n\nexport const fetchTheme = (username) => {\n    return fetch(`/theme/${username}`,{\n        method:'GET'\n    })\n    .catch( (error) => error.json().then(err => Promise.reject(err.message)))\n    .then( (response) =>{\n        if(!response.ok){\n            return response.json().then(err => Promise.reject(err));\n        }\n        return response.json();\n    })\n}\n\nexport const updateTheme = (username, theme) => {\n    return fetch(`/theme/${username}`,{\n        method: 'PUT',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({theme: theme})\n    })\n    .catch( (error) => error.json().then(err => Promise.reject(err.message)))\n    .then( (response) =>{\n        if(!response.ok){\n            return response.json().then(err => Promise.reject(err));\n        }\n        return response.json();\n    })\n}","import React, {useEffect, useState } from 'react';\nimport { fetchLogin } from './services';\n\nconst Login = ({ onLogin, setError }) => {\n    const [username, setUsername] = useState('');\n\n    const doLogin = () =>{\n        const name = username;\n        fetchLogin(name)\n        .then(user => {\n            onLogin(user.data.username);\n        })\n        .catch((err) =>{\n            setError(err.message);\n        });\n    };\n\n    useEffect( () => {\n        setError('');\n    }, []);\n\n    return (\n        <div className=\"login\">\n            <div className=\"auth\">\n                <input className=\"form-control\" onChange={ (e) => setUsername(e.target.value)} placeholder=\"Enter Username Here\"/>\n                <button className=\"btn btn-login\" onClick={ doLogin }>Login</button>\n            </div>\n        </div> \n    );\n};\n\nexport default Login;","import React from 'react';\nimport { fetchLogout } from './services';\n\nconst Logout = ({ onLogout, setError }) =>{\n\n    const doLogout = () =>{\n        fetchLogout()\n        .then(() => onLogout() )\n        .catch((err) =>{  \n            setError(err.error);\n        });\n    };\n\n    return (\n        <div className=\"logout\">\n            <button className=\"btn btn-logout\" onClick={ doLogout }>Logout</button>\n        </div>\n    );\n};\n\nexport default Logout;","import React, { useState} from 'react';\nimport {fetchTodo, fetchAllTodos} from './services';\n\nconst AddTodo = ({onSend, userState, setUserState, setError}) => {\n    const [todo, setTodo] = useState('');\n\n    const addTodo = (e) =>{\n        if(todo){\n            const task = {task: todo, done: false};\n            fetchTodo(task , userState.username)\n            .then(() =>{\n                setTodo('');\n                fetchAllTodos(userState.username)\n                .then((todos) => {\n                    onSend(todos.data);\n                    setError('');\n                }) \n            })\n            .catch((err) => {\n                setError(err.message);\n                if(err.message === 'no valid session' || err.message === 'action not permitted'){\n                    setUserState({\n                        isLoggedIn: false\n                    });\n                    setError('Login to continue');\n                }\n            })\n        }\n        if(!todo){\n            setError('Message cannot be Empty');\n        }\n    };\n\n    const onInput = (e) => {\n        setError('');\n        setTodo(e.target.value);\n    };\n\n    return (\n        <div className=\"message\">\n            <input className=\"form-control\" value={ todo } onChange={ onInput } placeholder=\"Enter Task Here\" />         \n            <button className=\"btn btn-send\" onClick={ addTodo }>Add Todo</button>\n        </div>\n    );\n};\n\nexport default AddTodo;","import React, { useState } from 'react';\n\n\nconst Filter = ({filterState, onFilter, sortState, onSort}) =>{\n    const [sorter, setSort] = useState(sortState);\n    const [filter, setFilter] = useState(filterState);\n\n    const filterTasks = (e) => {\n        setFilter(e.target.value);\n        onFilter(e.target.value);\n    };\n\n    const sortTasks = (e) => {\n        setSort(e.target.value);\n        onSort(e.target.value);\n    };\n\n    const refreshTasks = (e) => {\n        onSort();\n        onFilter();\n        setSort('1');\n        setFilter('1');\n    };\n\n    return (\n        <div className=\"filters\">\n            <div className=\"filter\">\n                <select value={ sorter } className=\"form-control form-select\" onChange={ sortTasks }>\n                    <option value=\"1\">Sort By Name (A-Z)</option>\n                    <option value=\"2\">Sort By Name (Z-A)</option>\n                    <option value=\"3\">Sort By Done</option>\n                    <option value=\"4\">Sort By Not Done</option>\n                </select>\n                <select value={ filter } className=\"form-control form-select\" onChange={ filterTasks }>\n                    <option value=\"1\">Show All</option>\n                    <option value=\"2\">Show Only Done</option>\n                    <option value=\"3\">Show Only Not Done</option>\n                </select>\n                <button className=\"btn btn-refresh\" onClick={ refreshTasks }>Refresh</button>\n            </div>\n        </div>\n    )\n};\n\nexport default Filter;\n","import React, { useState } from 'react';\nimport {fetchTask, fetchUpdateTask, fetchAllTodos, deleteTask} from './services';\nimport Filter from './Filter'\n\nconst TodoDisplay = ({todos,  userState , setTodos, setError, setUserState}) =>{\n    const [newtodo, setTodo] = useState('');\n    const [filterState, setFilterState] = useState('');\n    const [sortState, setSortState] = useState('');\n\n    const changeStatus = (e) => {\n        const id = e.target.dataset.id;\n        fetchTask(id, userState.username)\n        .then( task  => {\n            task.data.done = !task.data.done;\n            const todo = {...task.data}\n            fetchUpdateTask(userState.username, todo)\n            .then( () =>{\n                fetchAllTodos(userState.username)\n                .then( tasks => {\n                    setTodos(Object.values(tasks.data));\n                })\n            })\n        })\n        .catch( err => {\n            setError(err.message);\n            if(err.message =='no valid session' || err.message == 'action not permitted'){\n                setUserState({\n                    isLoggedIn: false\n                });\n                setError('Login to access');\n            }\n        })\n    };\n\n    const updateText = (e) => {\n        const id = e.target.dataset.id;\n        const text = newtodo;\n        if(text) {\n            fetchTask(id, userState.username)\n            .then( task  => {\n                const tasks = task.data\n                const updated = {...tasks, task:text}\n                fetchUpdateTask(userState.username, updated)\n                .then( () => {\n                    fetchAllTodos(userState.username)\n                    .then( tasks => {\n                        setTodos(Object.values(tasks.data));\n                    })\n                })\n            })\n            .catch( err => {\n                setError(err.message);\n                if(err.message =='no valid session' || err.message == 'action not permitted'){\n                    setUserState({\n                        isLoggedIn: false\n                    });\n                    setError('Login to continue...');\n                }\n            });\n        }\n        else {\n            setError('Message cannot be empty');\n        }\n    };\n\n    const deleteText =  (e) => {\n        const id = e.target.dataset.id;\n        deleteTask(userState.username, id)\n        .then( () => {\n            fetchAllTodos(userState.username)\n            .then( tasks => {\n                setTodos(Object.values(tasks.data));\n            })\n        })\n        .catch( err => {\n            setError(err.message);\n            if(err.message =='no valid session' || err.message == 'action not permitted'){\n                setUserState({\n                    isLoggedIn: false\n                });\n                setError('Login to continue...');\n            }\n        })\n    };\n\n    function isFiltered(task){\n        switch(filterState) {\n            case \"1\":\n                return true;\n            case \"2\":\n                return task.done === true;\n            case \"3\":\n                return task.done === false;\n            default:\n                return true;\n        }\n    }\n\n    function isSorted(task1, task2){\n        switch(sortState) {\n            case \"1\":\n                return task1.task.localeCompare(task2.task);\n            case \"2\":\n                return task2.task.localeCompare(task1.task);\n            case \"3\":\n                return task2.done - task1.done;    \n            case \"4\":\n                return task1.done - task2.done;\n            default:\n                return task1.task.localeCompare(task2.task);\n        }\n    }\n\n    const todosList = [...todos]\n    .sort(isSorted)\n    .filter(isFiltered).map( (todo) =>\n        <li className=\"item-group-child\" key={todo.taskId}>\n            <div className=\"item-grid\">\n                <div className=\"done\">\n                    <button className={todo.done ? 'btn btn-done' : 'btn btn-not-done'} data-id={todo.taskId} onClick={changeStatus}>{todo.done ? 'Done' : 'Not Done'}</button>\n                </div>\n                <div className=\"message\">\n                    <input className=\"form-control\" onChange={ (e) => { setError(''); setTodo(e.target.value) } } defaultValue={todo.task} placeholder=\"Update Task Here\"/>\n                    <button className=\"btn btn-update\" data-id={todo.taskId} onClick={updateText}>Update</button>\n                </div>\n                <button className=\"btn btn-delete\" data-id={todo.taskId} onClick={deleteText}>Delete</button>\n            </div>\n        </li>\n    );\n\n    return (\n        <div className=\"todo-area\">\n            <Filter filterState={ filterState } onFilter={(e) => setFilterState(e) }\n             sortState= { sortState } onSort={(e) => setSortState(e)}></Filter>\n            <div>\n                <ul className=\"item-group todo-group\">{ todosList }</ul>\n            </div>\n        </div>\n    )\n\n}\n\nexport default TodoDisplay;\n","import React, {useState, useEffect, useContext} from 'react';\nimport AddTodo from './AddTodo';\nimport TodoDisplay from './TodoDisplay'\nimport {fetchAllTodos } from './services';\n\nconst Todo = ({ userState, setUserState, setError }) => {\n    const [todos, setTodos] = useState([]);\n\n    const getTodos = () =>{\n        fetchAllTodos(userState.username)\n        .then( TodoList =>{\n            setTodos(Object.values(TodoList.data));\n        })\n        .catch( err =>{\n            setError(err.message);\n        });\n    };\n\n    useEffect( () => {\n        getTodos();\n        setError('');\n    }, []);\n\n    const send = ( todosList) =>{\n        setTodos(Object.values(todosList));\n    };\n\n    return (\n        <div className=\"todo\">\n            <div className=\"message-area\">\n                <AddTodo onSend={ send } userState={userState} setUserState= {setUserState} setError= {setError}/>\n            </div> \n            {\n                todos.length > 0 && <TodoDisplay todos={ todos } userState={userState} setTodos={setTodos} setError= {setError} setUserState={setUserState}/> \n            }\n        </div>\n    );\n};\n\nexport default Todo;","import React from 'react';\n\nconst ThemeContext = React.createContext('colorful');\n\nexport default ThemeContext;","import React, {useState, useEffect } from 'react';\nimport './App.css';\nimport { fetchLoginStatus, fetchTheme, updateTheme } from './services';\nimport Login from './Login';\nimport Logout from './Logout';\nimport Todo from './Todo';\nimport ThemeContext from './ThemeContext';\n\nconst App = () => {\n  const [userState, setUserState] = useState({ isLoggedIn: false});\n  const [error, setError] = useState('');\n  const [theme, setTheme] = useState('light');\n\n  useEffect(() => {\n    fetchLoginStatus()\n    .then((user) => {\n      setUserState({ \n        isLoggedIn: true,\n        username: user.data.username\n      });\n      getTheme(user.data.username);\n    });\n  }, []);\n\n  const login = (username) => {\n     setUserState({ \n       isLoggedIn: true,\n       username\n     });\n     getTheme(username);\n  };\n\n  const getTheme = (username) => {\n    fetchTheme(username)\n    .then(user => {\n        if(user.data === 'light' || user.data === 'dark'){\n            setTheme(user.data);\n        }else {\n            setTheme('colorful');\n        }\n    })\n    .catch(err =>{\n      setError(err.message);\n      if(err.message === 'no valid session' || err.message === 'action not permitted'){\n          setUserState({\n              isLoggedIn: false\n          });\n      }\n    });\n  };\n\n  const changeTheme = (e) => {\n    setTheme(e.target.value);\n    updateTheme(userState.username, e.target.value)\n    .catch(err =>{\n        setError(err.message);\n        if(err.message === 'no valid session' || err.message === 'action not permitted'){\n            setUserState({\n                isLoggedIn: false\n            });\n        }\n    });\n  };\n\n  const logout = ()=>{\n    setUserState({\n        isLoggedIn: false\n    });\n    setTheme('light');\n  };\n\n  return (\n    <ThemeContext.Provider value = { [theme, setTheme] }>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"theme\">\n            {\n              userState.isLoggedIn &&\n              <select value={theme} className=\"form-control form-select\" onChange={changeTheme}>\n                <option value=\"colorful\">Colorful Theme</option>\n                <option value=\"light\">Light Theme</option>\n                <option value=\"dark\">Dark Theme</option>\n              </select>\n            }\n          </div>\n          <h2>Welcome To T0d0!</h2>\n          <div>\n            {\n                userState.isLoggedIn &&\n                <Logout onLogout={ logout } setError={ setError }/>\n            }\n          </div>\n        </header>\n        <section className={theme}>\n          <p className =\"info-danger\">{ error }</p>\n          {\n            userState.isLoggedIn && <Todo userState={ userState } setUserState={ setUserState } setError={ setError }/> \n          }\n          {\n            !userState.isLoggedIn && <Login onLogin={ login } setError={ setError }/>  \n          }\n        </section>\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}